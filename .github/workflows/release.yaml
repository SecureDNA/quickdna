name: release

on:
  push:
    tags:
       - 'v*'

jobs:
  linux-wheels:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2010_x86_64
    steps:
     - uses: actions/checkout@v1
     - name: Build wheels
       run: |
         curl https://sh.rustup.rs -sSf | sh -s -- -y
         source $HOME/.cargo/env
         rustup default nightly
         bash .github/workflows/build-wheels.sh
     - uses: actions/upload-artifact@v1
       with:
         name: linux-wheels
         path: wheelhouse/

  osx-wheels:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
     - uses: actions/checkout@v1
     - uses: actions-rs/toolchain@v1
       with:
         toolchain: "nightly"
         default: true
     - uses: actions/setup-python@v2
       with:
         python-version: ${{ matrix.python-version }}
     - name: Build wheels
       run: |
         python3 -m pip install maturin
         maturin build --release
     - uses: actions/upload-artifact@v1
       with:
         name: osx-${{ matrix.python-version }}-wheel
         path: target/wheels

  windows-wheels:
    runs-on: windows-latest
    steps:
     - uses: actions/checkout@v1
     - uses: actions-rs/toolchain@v1
       with:
         toolchain: "nightly"
         default: true
     - uses: actions/setup-python@v2
     - name: Build wheels
       run: |
         python -m pip install maturin
         maturin build --release
     - uses: actions/upload-artifact@v1
       with:
         name: windows-wheels
         path: target/wheels

  release-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: ${{ steps.set_url.outputs.env_url }}
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux-wheels, osx-wheels, windows-wheels ]
    steps:
      - uses: actions/download-artifact@v2 # downloads all artifacts into subdir of current directory named artifact name
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish
        env:
          MATURIN_PASSWORD: ${{ secrets.MATURIN_PASSWORD }}
        run: |
          pip install maturin
          maturin upload -r https://test.pypi.org/legacy/ -u __token__ --skip-existing linux-wheels/* osx-wheels/* windows-wheels/*
      - name: Set environment url
        id: set_url
        run: |
          VERSION=$(echo $GITHUB_REF | sed -e "s#refs/tags/v##g")
          echo "::set-output name=env_url::https://pypi.org/project/maturin/$VERSION"
